<UserControl x:Class="superAwesomeAmazingTourPlanner.Views.Tours"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:superAwesomeAmazingTourPlanner.Views"
             xmlns:ViewModels="clr-namespace:ViewModels.ViewModels;assembly=ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <ViewModels:ToursViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type ViewModels:TourViewModel}">
            <local:Tour/>
        </DataTemplate>
        <ViewModels:MainViewModel x:Key="MainViewModel">

        </ViewModels:MainViewModel>

        <Style TargetType="DataGridCell"  x:Key="CellStyle">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridColumnHeader" x:Key="ColumnHeaderStyle">
            <Setter Property="Background" Value="Cornsilk"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="FontSize" Value="20"/>
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="GridLinesVisibility" Value="None"/>
        </Style>

        <Style TargetType="Button" x:Key="TourLinkButton">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- this style was copied and modified from: https://gist.github.com/pocari/ef7778f1d67f568001e8-->
        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Style.Setters>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="button" CornerRadius="5" Background="Transparent">
                                <TextBlock  Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="#FF5798d8" />
                                    <Setter TargetName="button" Property="Background"  Value="Green"/>
                                    <Setter Property="Foreground" Value="White" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="button" Property="BorderBrush" Value="#FF282828" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="button" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="Gray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style.Setters>
        </Style>
    </UserControl.Resources>


    <StackPanel>

        <TextBlock  HorizontalAlignment="Center" Margin="10" Padding="10" FontSize="24"
            Text="{Binding ViewName}"/>


        <TextBox
            Style="{StaticResource InputField}"
            x:Name="SearchBox" Height="40" 
            Margin="150, 10" Text="Search for tours">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="KeyUp">
                    <i:InvokeCommandAction Command="{Binding SearchCommand}" CommandParameter="{Binding Text, ElementName=SearchBox}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>

        <DataGrid ColumnHeaderStyle="{StaticResource ColumnHeaderStyle}" 
            CellStyle="{StaticResource CellStyle}"
            Margin="10" Cursor="Hand"
            AlternatingRowBackground="AliceBlue" 
            IsReadOnly="True" 
            CanUserAddRows="False" 
            AutoGenerateColumns="False" 
            ItemsSource="{Binding Data}">

            <DataGrid.Columns>
                
                <DataGridTemplateColumn Header="Name">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock>
                                <Hyperlink CommandParameter="{Binding Name}" 
                                    Command="{Binding LoadTourCommand, Mode=OneWay}" CommandTarget="{Binding Mode=OneWay, Source={StaticResource MainViewModel}}">
                                    <TextBlock Text="{Binding Name}"/>
                                </Hyperlink>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTextColumn Header="Distance" Binding="{Binding Distance}"/>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button 
                                    Command="{Binding LoadTourCommand}"
                                    CommandParameter="{Binding ElementName=dataGridTextColumn, Path=Binding}"
                                    Style="{StaticResource RoundedButton}">
                                 click me</Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>

        </DataGrid>

    </StackPanel>
</UserControl>
