<Application x:Class="superAwesomeAmazingTourPlanner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ViewModels="clr-namespace:ViewModels.ViewModels;assembly=ViewModels"
             xmlns:Converters="clr-namespace:superAwesomeAmazingTourPlanner.Converters"
             xmlns:local="clr-namespace:superAwesomeAmazingTourPlanner.Views"
             StartupUri="Views/MainWindow.xaml">
    
    <!--globl ressources-->
    <Application.Resources>

        <ResourceDictionary>
            <ViewModels:MainViewModel x:Key="MainViewModel"/>
            <Converters:MultiParamsConverter x:Key="MultiParamsConverter"/>
            <Converters:PathToBitMapImageConverter x:Key="PathToBitMapImageConverter"/>

            <Style x:Key="SubmitButton" TargetType="Button">
                <Setter Property="Margin" Value="10" />
                <Setter Property="Height" Value="40" />
            </Style>

            <Style x:Key="Status" TargetType="TextBlock">
                <Setter Property="FontSize" Value="24" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Converters:StatusToTextConverter x:Key="StatusToTextConverter"/>
            <Converters:StatusToColorConverter x:Key="StatusToColorConverter"/>


            <DataTemplate DataType="{x:Type ViewModels:HomeViewModel}">
                <local:Home/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModels:ToursViewModel}">
                <local:Tours DataContext="{Binding}"/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModels:TourViewModel}">
                <local:Tour DataContext="{Binding}"/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModels:CreateOrUpdateTourViewModel}">
                <local:CreateTour DataContext="{Binding}"/>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ViewModels:CreateTourLogViewModel}">
                <local:CreateTourLog DataContext="{Binding}"/>
            </DataTemplate> 
            
            <Style x:Key="Title" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="Margin" Value="10, 0"/>
                <Setter Property="FontSize" Value="24"/>
            </Style>

            <Style TargetType="TextBox" x:Key="InputField">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="Turquoise"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="10, 0"/>
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontSize" Value="18" />

                <Style.Triggers>
                    <Trigger Property="IsFocused" Value="True">
                        <Setter Property="BorderBrush" Value="Blue" />
                        <Setter Property="BorderThickness" Value="2" />

                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Label" TargetType="Label">
                <Setter Property="FontSize" Value="20" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="Margin" Value="0, 5" />
            </Style>

            <Style TargetType="DataGrid">
                <Setter Property="GridLinesVisibility" Value="None"/>
            </Style>

            <Style TargetType="DataGridCell"  x:Key="CellStyle">
                <Setter Property="Padding" Value="10"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="DataGridColumnHeader" x:Key="ColumnHeaderStyle">
                <Setter Property="Background" Value="Cornsilk"/>
                <Setter Property="Margin" Value="10"/>
                <Setter Property="Padding" Value="10"/>
                <Setter Property="FontSize" Value="18"/>
            </Style>

            <!-- this style was copied and modified from: https://gist.github.com/pocari/ef7778f1d67f568001e8-->
            <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="button" CornerRadius="5" Background="Transparent">
                                    <TextBlock  Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="button" Property="BorderBrush" Value="#FF5798d8" />
                                        <Setter TargetName="button" Property="Background"  Value="Green"/>
                                        <Setter Property="Foreground" Value="White" />
                                    </Trigger>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter TargetName="button" Property="BorderBrush" Value="#FF282828" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="button" Property="Opacity" Value="0.7" />
                                        <Setter Property="Foreground" Value="Gray" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
        </ResourceDictionary>
        
        
    </Application.Resources>


</Application>
